{
    "streams": [
        {
            "function e(n){return t.dispatch(y(n,c,s,e)),n}": "",
            "id": 1
        },
        {
            "function e(n){return t.dispatch(y(n,c,s,e)),n}": "",
            "id": 2
        },
        {
            "function e(n){return t.dispatch(y(n,c,s,e)),n}": "",
            "id": 3
        },
        {
            "function e(n){return t.dispatch(y(n,c,s,e)),n}": "",
            "id": 4
        },
        {
            "function e(n){return t.dispatch(y(n,c,s,e)),n}": "",
            "id": 5
        },
        {
            "function e(n){return t.dispatch(y(n,c,s,e)),n}": "",
            "id": 6
        },
        {
            "function e(n){return t.dispatch(y(n,c,s,e)),n}": "",
            "id": 7
        },
        {
            "function e(n){return t.dispatch(y(n,c,s,e)),n}": "",
            "id": 8
        },
        {
            "function e(n){return t.dispatch(y(n,c,s,e)),n}": "",
            "id": 9
        },
        {
            "function dispatch(action) {\n    if (!isPlainObject(action)) {\n      throw new Error('Actions must be plain objects. '   'Use custom middleware for async actions.');\n    }\n\n    if (typeof action.type ": "== 'undefined') {\n      throw new Error('Actions may not have an undefined \"type\" property. '   'Have you misspelled a constant?');\n    }\n\n    if (isDispatching) {\n      throw new Error('Reducers may not dispatch actions.');\n    }\n\n    try {\n      isDispatching = true;\n      currentState = currentReducer(currentState, action);\n    } finally {\n      isDispatching = false;\n    }\n\n    var listeners = currentListeners = nextListeners;\n\n    for (var i = 0; i < listeners.length; i  ) {\n      var listener = listeners[i];\n      listener();\n    }\n\n    return action;\n  }",
            "id": 10
        },
        {
            "function dispatch(action) {\n    if (!isPlainObject(action)) {\n      throw new Error('Actions must be plain objects. '   'Use custom middleware for async actions.');\n    }\n\n    if (typeof action.type ": "== 'undefined') {\n      throw new Error('Actions may not have an undefined \"type\" property. '   'Have you misspelled a constant?');\n    }\n\n    if (isDispatching) {\n      throw new Error('Reducers may not dispatch actions.');\n    }\n\n    try {\n      isDispatching = true;\n      currentState = currentReducer(currentState, action);\n    } finally {\n      isDispatching = false;\n    }\n\n    var listeners = currentListeners = nextListeners;\n\n    for (var i = 0; i < listeners.length; i  ) {\n      var listener = listeners[i];\n      listener();\n    }\n\n    return action;\n  }",
            "id": 11
        },
        {
            "function(){return!window.__REDUX_DEVTOOLS_EXTENSION_LOCKED__": "",
            "a.dispatch.apply(a,arguments)}": "",
            "id": 12
        },
        {
            "function(){return!window.__REDUX_DEVTOOLS_EXTENSION_LOCKED__": "",
            "a.dispatch.apply(a,arguments)}": "",
            "id": 13
        },
        {
            "function(){return!window.__REDUX_DEVTOOLS_EXTENSION_LOCKED__": "",
            "a.dispatch.apply(a,arguments)}": "",
            "id": 14
        },
        {
            "function(){return!window.__REDUX_DEVTOOLS_EXTENSION_LOCKED__": "",
            "a.dispatch.apply(a,arguments)}": "",
            "id": 15
        },
        {
            "function(){return!window.__REDUX_DEVTOOLS_EXTENSION_LOCKED__": "",
            "a.dispatch.apply(a,arguments)}": "",
            "id": 16
        },
        {
            "function(){return!window.__REDUX_DEVTOOLS_EXTENSION_LOCKED__": "",
            "a.dispatch.apply(a,arguments)}": "",
            "id": 17
        },
        {
            "function(){return!window.__REDUX_DEVTOOLS_EXTENSION_LOCKED__": "",
            "a.dispatch.apply(a,arguments)}": "",
            "id": 18
        },
        {
            "title": "Test",
            "description": "TestDesc",
            "id": 19
        },
        {
            "title": "Test",
            "description": "TestDesc",
            "id": 20
        },
        {
            "title": "Test",
            "description": "TestDesc",
            "id": 21
        }
    ]
}